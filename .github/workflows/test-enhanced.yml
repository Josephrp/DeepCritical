name: Enhanced Testing Workflow

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  DOCKER_TESTS: ${{ github.ref == 'refs/heads/main' && 'true' || 'false' }}
  PERFORMANCE_TESTS: ${{ secrets.PERFORMANCE_TESTS_ENABLED || 'false' }}

jobs:
  test-comprehensive:
    name: Comprehensive Test Suite
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11']

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          uv sync --dev

      - name: Run unit tests
        run: make test-unit

      - name: Run integration tests
        run: make test-integration

      - name: Run containerized tests (main branch only)
        if: github.ref == 'refs/heads/main'
        run: make test-containerized

      - name: Run performance tests (if enabled)
        if: env.PERFORMANCE_TESTS == 'true'
        run: make test-performance

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        if: matrix.python-version == '3.11'
        with:
          file: ./coverage.xml
          fail_ci_if_error: false

      - name: Upload test artifacts
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-results-${{ matrix.python-version }}
          path: test_artifacts/

  test-matrix:
    name: Test Matrix
    runs-on: ubuntu-latest
    needs: test-comprehensive
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            python: '3.11'
          - os: macos-latest
            python: '3.11'
          - os: windows-latest
            python: '3.11'

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}

      - name: Install dependencies (${{ matrix.os }})
        run: |
          python -m pip install --upgrade pip
          uv sync --dev

      - name: Run core tests (${{ matrix.os }})
        run: make test-core

      - name: Upload test artifacts (${{ matrix.os }})
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-results-${{ matrix.os }}
          path: test_artifacts/
